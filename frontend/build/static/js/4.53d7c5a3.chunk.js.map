{"version":3,"sources":["components/pages/AdminDashboard.js"],"names":["AdminDashboard","auth","useContext","AuthContext","navigate","useNavigate","tournaments","setTournaments","useState","useEffect","async","isLoggedIn","response","axios","get","userId","headers","Authorization","token","data","err","console","log","fetchTournamentsCreatedByUser","handleDeleteClick","delete","tournamentId","error","deleteTournament","tournament","id","filter","event","_jsxs","className","children","_jsx","Navbar","map","title","location","Date","date","toLocaleDateString","onClick","state","Footer"],"mappings":"0GAAA,+DAgGeA,UAxFf,WACE,MAAMC,EAAOC,qBAAWC,KAClBC,EAAWC,eACVC,EAAaC,GAAkBC,mBAAS,IAE/CC,qBAAU,KAC8BC,WACpC,GAAIT,EAAKU,WACP,IACE,MAAMC,QAAiBC,IAAMC,IAC3B,iDAAyDb,EAAKc,SAC9D,CACEC,QAAS,CACPC,cAAe,UAAUhB,EAAKiB,WAIpCX,EAAeK,EAASO,KAAKb,YAC/B,CAAE,MAAOc,GACPC,QAAQC,IAAI,8BAA+BF,EAC7C,CACF,EAEFG,EAA+B,GAC9B,CAACtB,EAAKc,OAAQd,EAAKU,WAAYV,EAAKiB,QAEvC,MAeMM,EAAoBd,UACxB,SAhBuBA,WACvB,UACQG,IAAMY,OACV,4CAAoDC,IACpD,CACEV,QAAS,CACPC,cAAe,UAAUhB,EAAKiB,UAItC,CAAE,MAAOS,GACPN,QAAQM,MAAM,+BAAgCA,EAChD,GAKQC,CAAiBC,EAAWC,IAClCvB,EAAeD,EAAYyB,QAAQC,GAAUA,EAAMF,KAAOD,EAAWC,KACvE,CAAE,MAAOV,GACPC,QAAQM,MAAM,8BAA+BP,EAC/C,GAGF,OACEa,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAACC,IAAM,IACPJ,eAAA,OAAKC,UAAU,sBAAqBC,SAAA,CAClCC,cAAA,MAAAD,SAAI,qBACJC,cAAA,SACC9B,EAAYgC,KAAKT,GAEdI,eAAA,OAAAE,SAAA,CACEF,eAAA,OAAAE,SAAA,CACEC,cAAA,MAAAD,SAAKN,EAAWU,QAChBH,cAAA,KAAAD,SAAIN,EAAWW,WACfJ,cAAA,KAAAD,SAAK,IAAIM,KAAKZ,EAAWa,MAAOC,0BAElCV,eAAA,OAAKC,UAAU,cAAaC,SAAA,CAC1BC,cAAA,UACEQ,QAASA,KACPxC,EAAS,0BAA2B,CAClCyC,MAAO,CAAEhB,WAAYA,IACrB,EACFM,SACH,SAGDC,cAAA,UAAQQ,QAASA,IAAMpB,EAAkBK,GAAYM,SAAC,cAIxDC,cAAA,WApBQP,EAAWC,SAyB3BM,cAACU,IAAM,MAGb,C","file":"static/js/4.53d7c5a3.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Navbar from \"../common/Navbar\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Footer from \"../common/Footer\";\r\n\r\nfunction AdminDashboard() {\r\n  const auth = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [tournaments, setTournaments] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTournamentsCreatedByUser = async () => {\r\n      if (auth.isLoggedIn) {\r\n        try {\r\n          const response = await axios.get(\r\n            `${process.env.REACT_APP_BACKEND_URL}/tournaments/user/${auth.userId}`,\r\n            {\r\n              headers: {\r\n                Authorization: `Bearer ${auth.token}`,\r\n              },\r\n            }\r\n          );\r\n          setTournaments(response.data.tournaments);\r\n        } catch (err) {\r\n          console.log(\"Unable to fetch tournaments\", err);\r\n        }\r\n      }\r\n    };\r\n    fetchTournamentsCreatedByUser();\r\n  }, [auth.userId, auth.isLoggedIn, auth.token]);\r\n\r\n  const deleteTournament = async (tournamentId) => {\r\n    try {\r\n      await axios.delete(\r\n        `${process.env.REACT_APP_BACKEND_URL}/tournaments/${tournamentId}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${auth.token}`,\r\n          },\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to delete Tournament:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteClick = async (tournament) => {\r\n    try {\r\n      await deleteTournament(tournament.id);\r\n      setTournaments(tournaments.filter((event) => event.id !== tournament.id));\r\n    } catch (err) {\r\n      console.error(\"Failed to delete Tournament\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bodyDiv\">\r\n      <Navbar />\r\n      <div className=\"tournamentContainer\">\r\n        <h2>Your Tournaments</h2>\r\n        <hr />\r\n        {tournaments.map((tournament) => {\r\n          return (\r\n            <div key={tournament.id}>\r\n              <div>\r\n                <h3>{tournament.title}</h3>\r\n                <p>{tournament.location}</p>\r\n                <p>{(new Date(tournament.date)).toLocaleDateString()}</p>\r\n              </div>\r\n              <div className=\"admin-child\">\r\n                <button\r\n                  onClick={() => {\r\n                    navigate(\"/admin/updateTournament\", {\r\n                      state: { tournament: tournament },\r\n                    });\r\n                  }}\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button onClick={() => handleDeleteClick(tournament)}>\r\n                  Delete\r\n                </button>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"sourceRoot":""}