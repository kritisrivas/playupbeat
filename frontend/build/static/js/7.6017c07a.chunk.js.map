{"version":3,"sources":["components/pages/UpdateTournament.js"],"names":["UpdateTournament","state","useLocation","auth","useContext","AuthContext","tournamentId","tournament","id","loadedTournament","setLoadedTournament","useState","tournamentUpdatedMsg","setTournamentUpdatedMsg","formData","setFormData","title","description","date","Date","location","useEffect","async","response","axios","get","data","err","fetchTournamentById","handleChange","e","name","value","target","_jsxs","className","children","_jsx","Navbar","onSubmit","preventDefault","patch","creator","userId","headers","Authorization","token","error","console","htmlFor","type","onChange","required","DatePicker","selected","handleDateChange","Footer"],"mappings":"0GAAA,wFAyHeA,UAhHUA,KACvB,MAAM,MAAEC,GAAUC,cACZC,EAAOC,qBAAWC,KAClBC,EAAeL,EAAMM,WAAWC,IAC/BC,EAAkBC,GAAuBC,sBACzCC,EAAsBC,GAA2BF,mBAAS,KAC1DG,EAAUC,GAAeJ,mBAAS,CACvCK,MAAO,GACPC,YAAa,GACbC,KAAM,IAAIC,KACVC,SAAU,KAGZC,qBAAU,KACoBC,WAC1B,IACE,MAAMC,QAAiBC,IAAMC,IAC3B,4CAAoDnB,KAEtDI,EAAoBa,EAASG,KAAKnB,YAClCQ,EAAY,CACVC,MAAOO,EAASG,KAAKnB,WAAWS,MAChCC,YAAaM,EAASG,KAAKnB,WAAWU,YACtCC,KAAMK,EAASG,KAAKnB,WAAWW,KAC/BE,SAAUG,EAASG,KAAKnB,WAAWa,UAEvC,CAAE,MAAOO,GAAM,GAEjBC,EAAqB,GACpB,CAACtB,EAAcS,IAElB,MAAMc,EAAgBC,IACpB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BlB,EAAY,IAAKD,EAAU,CAACiB,GAAOC,GAAQ,EAwB7C,OACEE,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAACC,IAAM,IACPJ,eAAA,OAAKC,UAAU,uBAAsBC,SAAA,CACnCC,cAAA,MAAAD,SAAI,sBACH3B,GACCyB,eAAA,QAAMK,SAxBOjB,UACnBQ,EAAEU,iBACF,UACQhB,IAAMiB,MACV,4CAAoDnC,IACpD,IAAKQ,EAAU4B,QAASvC,EAAKwC,QAC7B,CACEC,QAAS,CACPC,cAAe,UAAU1C,EAAK2C,WAIpCjC,EAAwB,kCAC1B,CAAE,MAAOkC,GACPC,QAAQD,MAAM,SAAUA,EAC1B,GASoCZ,UAAU,aAAYC,SAAA,CAClDC,cAAA,SAAOY,QAAQ,QAAOb,SAAC,UACvBC,cAAA,SACEa,KAAK,OACL1C,GAAG,QACHuB,KAAK,QACLC,MAAOlB,EAASE,MAChBmC,SAAUtB,EACVuB,UAAQ,IAGVf,cAAA,SAAOY,QAAQ,cAAab,SAAC,gBAC7BC,cAAA,YACE7B,GAAG,cACHuB,KAAK,cACLC,MAAOlB,EAASG,YAChBkC,SAAUtB,EACVuB,UAAQ,IAGVf,cAAA,SAAOY,QAAQ,OAAMb,SAAC,SACtBC,cAACgB,IAAU,CACT7C,GAAG,OACHuB,KAAK,OACLuB,SAAU,IAAInC,KAAKL,EAASI,MAC5BiC,SAAWjC,GApDGA,KACxBH,EAAY,IAAKD,EAAUI,KAAMA,GAAO,EAmDVqC,CAAiBrC,GACrCkC,UAAQ,IAGVf,cAAA,SAAOY,QAAQ,WAAUb,SAAC,aAC1BC,cAAA,SACEa,KAAK,OACL1C,GAAG,WACHuB,KAAK,WACLC,MAAOlB,EAASM,SAChB+B,SAAUtB,EACVuB,UAAQ,IAGVf,cAAA,UAAQa,KAAK,SAAQd,SAAC,WACtBC,cAAA,KAAAD,SAAIxB,UAIVyB,cAACmB,IAAM,MACH,C","file":"static/js/7.6017c07a.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../common/Navbar\";\r\nimport Footer from \"../common/Footer\";\r\nimport { AuthContext } from \"../context/auth-context\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst UpdateTournament = () => {\r\n  const { state } = useLocation();\r\n  const auth = useContext(AuthContext);\r\n  const tournamentId = state.tournament.id;\r\n  const [loadedTournament, setLoadedTournament] = useState();\r\n  const [tournamentUpdatedMsg, setTournamentUpdatedMsg] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    date: new Date(),\r\n    location: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchTournamentById = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_BACKEND_URL}/tournaments/${tournamentId}`\r\n        );\r\n        setLoadedTournament(response.data.tournament);\r\n        setFormData({\r\n          title: response.data.tournament.title,\r\n          description: response.data.tournament.description,\r\n          date: response.data.tournament.date,\r\n          location: response.data.tournament.location,\r\n        });\r\n      } catch (err) {}\r\n    };\r\n    fetchTournamentById();\r\n  }, [tournamentId, setFormData]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleDateChange = (date) => {\r\n    setFormData({ ...formData, date: date });\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.patch(\r\n        `${process.env.REACT_APP_BACKEND_URL}/tournaments/${tournamentId}`,\r\n        { ...formData, creator: auth.userId },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${auth.token}`, // Replace with actual token\r\n          },\r\n        }\r\n      );\r\n      setTournamentUpdatedMsg(\"Tournament updated successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bodyDiv\">\r\n      <Navbar />\r\n      <div className=\"event-form-container\">\r\n        <h2>Update Tournament</h2>\r\n        {loadedTournament && (\r\n          <form onSubmit={handleSubmit} className=\"event-form\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <label htmlFor=\"description\">Description</label>\r\n            <textarea\r\n              id=\"description\"\r\n              name=\"description\"\r\n              value={formData.description}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <label htmlFor=\"date\">Date</label>\r\n            <DatePicker\r\n              id=\"date\"\r\n              name=\"date\"\r\n              selected={new Date(formData.date)}\r\n              onChange={(date) => handleDateChange(date)}\r\n              required\r\n            />\r\n\r\n            <label htmlFor=\"location\">Location</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"location\"\r\n              name=\"location\"\r\n              value={formData.location}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n\r\n            <button type=\"submit\">Update</button>\r\n            <p>{tournamentUpdatedMsg}</p>\r\n          </form>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateTournament;\r\n"],"sourceRoot":""}